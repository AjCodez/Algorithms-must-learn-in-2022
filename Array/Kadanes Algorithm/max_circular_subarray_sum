public class max_circualr_subarray_sum {
	public static void main(String args[])
	{
			
		Scanner sc = new Scanner(System.in);
		int t=sc.nextInt();
		while(t-->0)
		{
			int n=sc.nextInt();
			int arr[]=new int[n];
			for(int i=0;i<n;i++)arr[i]=sc.nextInt();


			// bruteforce   Kadanes for every element in array O(n^2)
			// int maxSum=0;
			// for(int i=0;i<n;i++)
			// {
			// 	int sum=0;
			// 	int maxs=-999999;
			// 	for(int k=i;k<i+n;k++)
			// 	{
			// 		sum=sum+arr[k%n];
			// 		if(sum<0)sum=0;
			// 		maxs=Math.max(maxs,sum);
			// 	}
			// 	maxSum=Math.max(maxs,maxSum);
			// }
			// System.out.println(maxSum);


			// optimized  
			//   Max of (  positive kadanes  ,  total sum -negative kadanes(max) )
			// in case of positive of kadanes is negative max return max of positive 
			// bcz it is the case of (all elements are negativee)
			int max=-9999;
			int sum=0;
			int totalsum=0;
			for(int i=0;i<n;i++)
			{
				totalsum+=arr[i];
				sum=sum+arr[i];
				if(sum<0)sum=0;
				max=Math.max(sum,max);
			}
			int max2=-9999;
			sum=0;
			for(int i=0;i<n;i++)
			{
				sum+=-arr[i];
				if(sum<0)sum=0;
				max2=Math.max(max2,sum);
			}

			System.out.println(Math.max(max,totalsum+max2));
			



	}

}
